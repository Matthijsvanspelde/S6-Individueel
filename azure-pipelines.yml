# Docker
# Build a Docker image
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- main

resources:
- repo: self

variables:
  imageRepo: UserService
  tag: '$(Build.BuildId)'

stages:
- stage: Build
  displayName: Build image
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: Docker@2
      displayName: Build an image
      inputs:
        command: build
        dockerfile: '$(Build.SourcesDirectory)/AssetStoreBackend/UserService/Dockerfile'
        tags: |
              $(tag)
    - task: Docker@2
      inputs:
        containerRegistry: 'AssetStoreRegistry'
        repository: '$(imageRepo)'
        command: 'buildAndPush'
        Dockerfile: '**/Dockerfile'
        tags: |
          $(tag)
          latest
    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(Build.SourcesDirectory)/K8S'
        artifact: 'manifests'
        publishLocation: 'pipeline'
        
- stage: SecurityTests
  displayName: Test Security
  jobs:
  - job: AuthenticationServiceTests
    displayName: AuthenticationService Tests
    steps:
    - task: VSTest@2
      inputs:
        testSelector: 'testRun'
        searchFolder: '$(System.DefaultWorkingDirectory)/AssetStoreBackend/AuthenticationService.Tests'
        codeCoverageEnabled: true


- stage: Deploy
  displayName: Deploy to Dev
  dependsOn: Build
  variables: 
    acrsecret: arc-secret
  jobs:
  - deployment: Deploy
    displayName: Deploy to AKS
    environment: 'Dev.default'
    pool:
      vmImage: ubuntu-latest
    strategy:
      runOnce:
        deploy:         
          steps: 
          - task: DownloadPipelineArtifact@2
            inputs:
              buildType: 'current'
              artifactName: 'manifests'
              targetPath: '$(Pipeline.Workspace)/manifests'
          - task: KubernetesManifest@0
            inputs:
              action: 'createSecret'
              namespace: 'default'
              secretType: 'dockerRegistry'
              secretName: '$(acrsecret)'
              dockerRegistryEndpoint: 'AssetStoreRegistry'
          - task: KubernetesManifest@0
            inputs:
              action: 'deploy'
              namespace: 'default'
              manifests: |
                $(Pipeline.Workspace)/manifests/users-depl.yaml
                $(Pipeline.Workspace)/manifests/users-service.yaml